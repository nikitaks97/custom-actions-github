name: Deployment using custom actions

on:
  push:
    branches:
      - main
  workflow_dispatch:  # ðŸ‘ˆ Manual trigger added

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: use custom action
        id: cache-deps
        uses: ./cached-deps
        with:
          caching: 'false'
      - name: output information
        run: echo " cache used ? ${{ steps.cache-deps.outputs.used-cache }}"
      - name: Lint code
        run: npm run lint
        working-directory: 01_Starting_Project

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            01_Starting_Project/node_modules
          key: deps-node-modules-${{ hashFiles('01_Starting_Project/package-lock.json') }}
          restore-keys: |
            deps-node-modules-

      - name: Install dependencies
        run: npm ci
        working-directory: 01_Starting_Project

      - name: Test code
        id: run-tests
        run: npm run test
        working-directory: 01_Starting_Project

      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          path: 01_Starting_Project/test-results
          name: test-report

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            01_Starting_Project/node_modules
          key: deps-node-modules-${{ hashFiles('01_Starting_Project/package-lock.json') }}
          restore-keys: |
            deps-node-modules-

      - name: Install dependencies
        run: npm ci
        working-directory: 01_Starting_Project

      - name: Build website
        run: npm run build
        working-directory: 01_Starting_Project

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: 01_Starting_Project/dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4

      - name: Get build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: 01_Starting_Project
      - name: deploy site
        id: deploy
        uses: ./deploy-s3-javascript
        env: 
          AWS_ACCESS_KEY_ID:  ${{  secrets.AWS_ACCESS_KEY_ID  }}
          AWS_SECRET_ACCESS_KEY: ${{  secrets.AWS_SECRET_ACCESS_KEY  }}
        with:
         bucket: custom-js-gha
         dist-folder: 01_Starting_Project
      - name: Output information
        run:
          echo "LIVE URL is $ {{steps.deploy.outputs.website-URL }}"

      #- name: Output contents
       # run: ls -R 01_Starting_Project/dist

 # information:
    #runs-on: ubuntu-latest
    #steps:
    #- name: checkout code
     # uses: actions/checkout@v4
    #- name: run custom action
     # uses: ./deploy-s3-javascript

